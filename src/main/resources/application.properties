# Nombre de la aplicación configurada en el entorno.
spring.application.name=Backend
# Puerto en el que el servidor de la aplicación estará escuchando las solicitudes.
server.port=5050

# **Conexión a MySQL**
# Configuración de la URL de conexión a la base de datos MySQL. 
# Incluye el host (`localhost`), el puerto (`3306`) y el nombre de la base de datos (`inventorySystem_db`).
spring.datasource.url=jdbc:mysql://localhost:3306/inventorySystem_db

# Nombre de usuario para conectarse a la base de datos MySQL.
spring.datasource.username=root

# Contraseña asociada con el usuario definido para la conexión.
spring.datasource.password=Mysql@Unlimited2077

# Clase del controlador para la conexión con MySQL, necesaria para establecer la comunicación entre la aplicación y la base de datos.
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Definición del dialecto de Hibernate que permite interpretar y generar las sentencias SQL específicas para MySQL.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Define cómo debería Hibernate interactuar con el esquema de las tablas de la base de datos.
# En este caso, `update` asegura que la estructura de la base de datos se actualice automáticamente para alinearse con las entidades si existen cambios.
spring.jpa.hibernate.ddl-auto=update

# **Tamaño máximo de archivos que pueden subirse**
# Define el tamaño máximo permitido para los archivos individuales cargados a través de la API, en este caso, 2 GB.
spring.servlet.multipart.max-file-size=2GB

# Define el tamaño máximo combinado permitido en una solicitud, contemplando archivos y otros datos, también configurado a 2 GB.
spring.servlet.multipart.max-request-size=2GB

# **Clave secreta para JWT**
# La cadena utilizada para firmar y verificar los tokens JWT (JSON Web Tokens).
# Esta clave es clave para validar la autenticidad de los tokens generados en la aplicación.
secreteJwtString=backedtalleriv123456789backendtalleriv123456789